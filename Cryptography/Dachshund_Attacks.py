"""
Description
What if d is too small? Connect with nc mercury.picoctf.net 37455.
"""
import owiener
import binascii

e = 31036014502008606613805005992094581842648285308113541137378086268088767909445572067902880552732751387207003218765869446647498354205473397529714052583465941977963883735170054758448417409422360960719958028760758876872303964601871111183870312578894505191766565573595145248164254449624271636302897421757011072061
n = 86753175938733035237680283341399581771073461802182066482704400659880585961318597594642617303193001480369139574613761422224492098596416728720686447788609447776544672457013076855352363143386667465973932981074285628544479206513166163829863230762483396205028252980119613302181990381929886410760170547233984437649
c = 59838773318794824685684278082569858683172394904572252516407050653775008222961073741022015854332120039321399988443356523167908846191899827440341941765175557341224929587921969379558293778856283012078441138650306053989730128012047890929636758812179865605085118216013997969394998645868179999300320615938108513741
d = owiener.attack(e, n)

if d is None:
    print("Failed")
else:
    print("Hacked d= {}".format(d))
  
# Hacked d = 8172742463960389538138637375504451509246167366230778210873959967919263359157

# now that we got d, we can solve for m in c = pow(m,e,n) --> m = pow(c,d,n)
m = pow(c,d,n)
print("Decrypted message: ",m)    # 198614235373674103788888306985643587194108045477674049828439422174745801853

# Decimal to Hex
hex_string = hex(m)[2:]  
print("Hex: ", hex_string)                 # 7069636f4354467b70726f76696e675f7769656e65725f333837383637347d

# Hex to Text
bytes_object = bytes.fromhex(hex_string)
flag = bytes_object.decode('utf-8')
print(flag)

#FLAG: picoCTF{proving_wiener_3878674}
